// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "MainWindowUI.h"

MainWindowUI::MainWindowUI() {
  {
    m_main_window = new Fl_Double_Window(1054, 1059, "mainWindow");
    m_main_window->box(FL_THIN_DOWN_BOX);
    m_main_window->user_data((void *)(this));
    {
      m_config_tree = new Fl_Tree(20, 40, 300, 440, "Configuration");
    } // Fl_Tree* m_config_tree
    {
      m_status_table = new StatusTable(20, 505, 300, 445, "Status");
      m_status_table->box(FL_THIN_DOWN_FRAME);
      m_status_table->color(FL_BACKGROUND_COLOR);
      m_status_table->selection_color(FL_BACKGROUND_COLOR);
      m_status_table->labeltype(FL_NORMAL_LABEL);
      m_status_table->labelfont(0);
      m_status_table->labelsize(14);
      m_status_table->labelcolor(FL_FOREGROUND_COLOR);
      m_status_table->align(Fl_Align(FL_ALIGN_TOP));
      m_status_table->when(FL_WHEN_RELEASE);
      m_status_table->end();
    } // StatusTable* m_status_table
    {
      Fl_Group *o = new Fl_Group(340, 40, 635, 445);
      o->box(FL_DOWN_FRAME);
      {
        m_rpm = new Fl_Dial(395, 65, 160, 160, "RPM");
        m_rpm->type(1);
        m_rpm->maximum(6000);
        m_rpm->step(500);
      } // Fl_Dial* m_rpm
      o->end();
    } // Fl_Group* o
    {
      chart = new Fl_Chart(575, 38, 395, 206, "Chart");
      chart->box(FL_NO_BOX);
      chart->color(FL_BACKGROUND_COLOR);
      chart->selection_color(FL_BACKGROUND_COLOR);
      chart->labeltype(FL_NORMAL_LABEL);
      chart->labelfont(0);
      chart->labelsize(14);
      chart->labelcolor(FL_FOREGROUND_COLOR);
      chart->align(Fl_Align(FL_ALIGN_CENTER));
      chart->when(FL_WHEN_RELEASE);
    } // Fl_Chart* chart
    {
      Fl_Box *o = new Fl_Box(10, 968, 990, 24, "Status:");
      o->box(FL_DOWN_BOX);
      o->align(Fl_Align(FL_ALIGN_LEFT | FL_ALIGN_INSIDE));
    } // Fl_Box* o
    {
      m_connection_status = new Fl_Box(195, 968, 40, 24, "Connection");
      m_connection_status->box(FL_UP_BOX);
      m_connection_status->color((Fl_Color)1);
      m_connection_status->align(Fl_Align(FL_ALIGN_LEFT));
    } // Fl_Box* m_connection_status
    m_main_window->set_non_modal();
    m_main_window->end();
  } // Fl_Double_Window* m_main_window
  m_main_window->show();
}
